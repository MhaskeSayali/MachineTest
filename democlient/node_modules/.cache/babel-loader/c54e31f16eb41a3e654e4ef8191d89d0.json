{"ast":null,"code":"var _jsxFileName = \"/Users/sayalim/Documents/ProjectsOfSayli/HHM/DemoProject/DemoApp/democlient/src/Component/JS/CreateNewProductAndTrackProductInfo.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactTable from 'react-table';\nimport { getAPIHostURL } from '../../ClientConfig';\nimport { FaSearch, FaEdit, FaTrash } from 'react-icons/fa';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport 'react-table/react-table.css';\nimport '../CSS/ProductPage.css';\nexport class CreateNewProductAndTrackProductInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.oneditProductDetails = (rowInfo, column) => {\n      let modifiedState = this.state;\n      modifiedState.formViewMode = \"editMode\";\n      modifiedState.productname = rowInfo.original.productname;\n      modifiedState.selectedCategory = rowInfo.original.CategoryType;\n      modifiedState.ProductID = rowInfo.original.ProductID;\n      modifiedState.CategoryID = rowInfo.original.CategoryID;\n      console.log(rowInfo.original);\n      modifiedState.modal = true;\n      this.setState(modifiedState);\n    };\n\n    this.onDeleteProductDetails = (rowInfo, column) => {\n      let modifiedState = this.state;\n      modifiedState.formViewMode = \"deleteMode\";\n      modifiedState.productname = rowInfo.original.productname;\n      modifiedState.selectedCategory = rowInfo.original.CategoryType;\n      modifiedState.ProductID = rowInfo.original.ProductID;\n      modifiedState.CategoryID = rowInfo.original.CategoryID;\n      console.log(rowInfo.original);\n      modifiedState.modal = true;\n      this.setState(modifiedState);\n    };\n\n    this.createProductDataFilter = ({\n      filter,\n      onChange\n    }) => {\n      let appRelevantDataContextValue = this.context;\n      let t = appRelevantDataContextValue.t;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(FaSearch, {\n        style: {\n          marginRight: \"0.3rem\",\n          color: \"var(--secondaryColor)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: event => onChange(event.target.value),\n        value: filter ? filter.value : '',\n        placeholder: \"Search\",\n        style: {\n          width: \"85%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }));\n    };\n\n    this.toggle = () => {\n      this.setState(prevState => {\n        let modifiedState = prevState;\n        modifiedState.modal = !modifiedState.modal;\n        modifiedState.ProductID = \"\";\n        modifiedState.productname = \"\";\n        modifiedState.CategoryType = \"\";\n        modifiedState.formViewMode = \"insertMode\";\n        modifiedState.CategoryID = \"\";\n        return modifiedState;\n      });\n    };\n\n    this.closeModal = () => {\n      this.toggle();\n    };\n\n    this.getAllCategoriesInformation = () => {\n      let modifiedState = this.state;\n      axios.post(\"\".concat(getAPIHostURL(), \"/wclient/getAllCategoriesInformation\")).then(response => {\n        if (response.data.code == 'SUCCESS') {\n          if (response.data.retrievedAllCategoriesInfo == null || response.data.retrievedAllCategoriesInfo.length <= 0) {\n            modifiedState.errors.others = \"Categories Information does not found on server\";\n            this.setState(modifiedState);\n            return;\n          } else {\n            modifiedState.ArrCategoryInfo = [];\n            const receivedCategoryInfo = response.data.retrievedAllCategoriesInfo;\n\n            for (let j = 0; j < receivedCategoryInfo.length; j++) {\n              modifiedState.ArrCategoryInfo.push(receivedCategoryInfo[j]);\n            }\n          }\n\n          this.setState(modifiedState);\n        } else {\n          if (response.data.code == 'SQL_ERROR') {\n            // Tell the user that Server is experiencing errors\n            modifiedState.errors.others = 'Server experiencing issues.\\nTry again later.';\n          } else {\n            console.log('Should not reach here');\n            modifiedState.errors.others = 'Server experiencing issues.\\nTry again later.';\n          }\n        }\n\n        this.setState(modifiedState);\n      }).catch(error => {\n        console.log(error);\n        console.log(\"Network error:\");\n        modifiedState.errors.others = 'Network issues.\\nCheck your Internet and Try again later.';\n        this.setState(modifiedState);\n      });\n    };\n\n    this.getLatestProductInfo = (inModifiedState = null) => {\n      let modifiedState;\n\n      if (inModifiedState == null) {\n        modifiedState = this.state;\n      } else {\n        modifiedState = inModifiedState;\n      }\n\n      let LastModifiedUtcDtTmForInsertOrUpdateProductDetails;\n\n      if (modifiedState.formViewMode == \"editMode\" || modifiedState.formViewMode == \"insertMode\") {\n        LastModifiedUtcDtTmForInsertOrUpdateProductDetails = modifiedState.LastModifiedUtcDtTmOfReceivedProductData;\n      } else {\n        LastModifiedUtcDtTmForInsertOrUpdateProductDetails = null;\n      }\n\n      const jsonBody = {\n        retriveRowsLimit: 5,\n        offSet: modifiedState.offSet\n      };\n      axios.post(\"\".concat(getAPIHostURL(), \"/wclient/getProductDetails\"), jsonBody).then(response => {\n        if (response.data.code == 'SUCCESS') {\n          if (response.data.retrivedProductDetails == null || response.data.retrivedProductDetails.length <= 0) {\n            console.log(\"No Product Data Found on server.\");\n            this.setState(modifiedState);\n            return;\n          } else {\n            let stateProductDetailsArr = [];\n            console.log(\"modifiedState.formViewMode\", modifiedState.formViewMode); // React table checks using referential integrity. So if you do not create a\n            // new array (but just add to the existing array), the change detection will not trigger.\n            // So create a brand new array from existing product Details data.\n\n            stateProductDetailsArr = [...modifiedState.data];\n            const receivedProductDataArr = response.data.retrivedProductDetails;\n            let editIcon = React.createElement(FaEdit, {\n              className: \"viewAndEditIcon\",\n              title: \"Edit\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 315\n              },\n              __self: this\n            });\n            let deleteIcon = React.createElement(FaTrash, {\n              className: \"viewAndEditIcon\",\n              title: \"Delete\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 316\n              },\n              __self: this\n            });\n\n            for (let i = 0; i < receivedProductDataArr.length; i++) {\n              const ProductDetails = receivedProductDataArr[i];\n              let singleProductDetails = {\n                delete: deleteIcon,\n                edit: editIcon,\n                ProductID: ProductDetails.ProductID,\n                productname: ProductDetails.ProductName,\n                CategoryType: ProductDetails.CategoryType,\n                CategoryID: ProductDetails.CategoryID\n              };\n              console.log(\"singleProductDetails\", singleProductDetails); //if form is open in insertMode(create new Product) then just add new retrieved data(new added Product details) at top of the Product table.\n\n              if (modifiedState.formViewMode == \"insertMode\") {\n                for (let j = 0; j < stateProductDetailsArr.length; j++) {\n                  if (stateProductDetailsArr[j].ProductID == singleProductDetails.ProductID) {\n                    stateProductDetailsArr.splice(j, 1);\n                  }\n                }\n\n                stateProductDetailsArr.unshift(singleProductDetails);\n                modifiedState.selectedRowIndex = 0;\n                modifiedState.page = 0;\n              } //if form is open in editMode(edit existing Produc details) then compare all ProductID in Product table\n              //with retrieved ProductID after editing Product details. If both ProductID get match then remove the selected Product data\n              //from Product table, and add new retrived Product data at top of the Product table.\n              else if (modifiedState.formViewMode == \"editMode\") {\n                  for (let j = 0; j < stateProductDetailsArr.length; j++) {\n                    if (stateProductDetailsArr[j].ProductID == singleProductDetails.ProductID) {\n                      stateProductDetailsArr.splice(j, 1);\n                    }\n                  }\n\n                  modifiedState.selectedRowIndex = 0;\n                  modifiedState.page = 0;\n                  stateProductDetailsArr.unshift(singleProductDetails);\n                } //on first time page load its will retrieved 1st 5 product details and add it in product table,\n                // in order of latest data on top of the product table.\n                else {\n                    stateProductDetailsArr.push(singleProductDetails);\n                  }\n            }\n\n            modifiedState.data = stateProductDetailsArr;\n          }\n        } else {\n          if (response.data.code == 'SQL_ERROR') {\n            // Tell the user that Server is experiencing errors\n            modifiedState.errors.others = 'Server experiencing issues.\\nTry again later.';\n          } else {\n            console.log('Should not reach here');\n            modifiedState.errors.others = 'Server experiencing issues.\\nTry again later.';\n          }\n        }\n\n        this.setState(modifiedState);\n      }).catch(error => {\n        console.log(error);\n        console.log(\"Network error:\");\n        modifiedState.errors.others = 'Network issues.\\nCheck your Internet and Try again later.';\n        this.setState(modifiedState);\n      });\n    };\n\n    this.insertOrUpdateProductInfo = event => {\n      let modifiedState = this.state;\n      event.preventDefault();\n      const jsonBody = {\n        productId: modifiedState.ProductID,\n        productName: modifiedState.productname,\n        categoryId: modifiedState.CategoryID,\n        formViewMode: modifiedState.formViewMode\n      };\n      console.log(\"jsonBody\", jsonBody);\n      axios.post(\"\".concat(getAPIHostURL(), \"/wclient/insertOrUpdateProductInfo\"), jsonBody).then(response => {\n        if (response.data.code == 'SUCCESS') {\n          if (modifiedState.formViewMode == \"editMode\") {\n            alert(\"Successfully Updated Product Details.\");\n            modifiedState.modal = false;\n            this.getLatestProductInfo(modifiedState);\n          } else if (modifiedState.formViewMode == \"deleteMode\") {\n            alert(\"Successfully Deleted selected Product Details.\");\n\n            for (let i = 0; i < modifiedState.data.length; i++) {\n              if (modifiedState.data[i]['ProductID'] == modifiedState.ProductID) {\n                modifiedState.data.splice(i, 1);\n              }\n            }\n\n            modifiedState.modal = false;\n            modifiedState.data = [...modifiedState.data];\n            this.setState(modifiedState);\n          } else {\n            alert(\"Successfully Created New Product.\");\n            modifiedState.modal = false;\n            this.getLatestProductInfo(modifiedState);\n          }\n        } else {\n          if (response.data.code == 'SQL_ERROR') {\n            // Tell the user that Server is experiencing errors\n            modifiedState.errors.others = 'Server experiencing issues.\\nTry again later.';\n          } else if (response.data.code == 'PRODUCT_ALREADY_EXIST') {\n            modifiedState.errors.others = \"This Product already exists On the Server.\";\n          } else if (response.data.code == 'REQ_PARAMS_MISSING') {\n            modifiedState.errors.others = \"Server experiencing issues (required parameters not sent). Try again later.\";\n          } else {\n            console.log('Should not reach here');\n            modifiedState.errors.others = 'Server experiencing issues.\\nTry again later.';\n          }\n        }\n\n        this.setState(modifiedState);\n      }).catch(error => {\n        console.log(error);\n        console.log(\"Network error:\");\n        modifiedState.errors.others = 'Network issues.\\nCheck your Internet and Try again later.';\n        this.setState(modifiedState);\n      });\n    };\n\n    this.getSelectedTrProps = (state, rowInfo, column, instance) => {\n      let modifiedState = this.state;\n\n      if (rowInfo != undefined) {\n        return {\n          onClick: (e, handleOriginal) => {\n            modifiedState.selectedProductInfo = {};\n            modifiedState.selectedProductInfo = rowInfo.original;\n            modifiedState.selectedRowIndex = rowInfo.index;\n            this.setState(modifiedState);\n          },\n          style: {\n            cursor: '',\n            background: rowInfo.index == this.state.selectedRowIndex ? '#6c95ba' : '',\n            color: rowInfo.index == this.state.selectedRowIndex ? 'white' : 'black',\n            alignItems: \"center\"\n          }\n        };\n      } else {\n        return {};\n      }\n    };\n\n    this.handleKeyPress = e => {\n      const characterCode = e.key;\n      const characterNumber = Number(characterCode);\n\n      if (characterNumber >= 0 && characterNumber <= 9) {\n        if (e.currentTarget.value && e.currentTarget.value.length) {\n          return;\n        } else if (characterNumber == 0) {\n          e.preventDefault();\n        }\n      } else {\n        e.preventDefault();\n      }\n    };\n\n    this.onPageChange = page => {\n      let modifiedState = this.state;\n      modifiedState.page = page;\n    };\n\n    this.onChangeProductName = e => {\n      let modifiedState = this.state;\n      modifiedState.productname = e.target.value;\n      this.setState(modifiedState);\n    };\n\n    this.onSelectCategory = e => {\n      let modifiedState = this.state;\n      console.log(\"ArrCategoryInfo\", modifiedState.ArrCategoryInfo);\n      modifiedState.CategoryID = e.target.value;\n      console.log(modifiedState.CategoryID);\n      this.setState(modifiedState);\n    };\n\n    this.onclickNextPageData = e => {\n      let modifiedState = this.state;\n      modifiedState.page = modifiedState.page + 1;\n      modifiedState.offSet = modifiedState.page * 5;\n      console.log(modifiedState.offSet, \"offSet\");\n      console.log(modifiedState.page, \"page\");\n      this.getLatestProductInfo();\n    };\n\n    this.state = {\n      modal: false,\n      backdrop: 'static',\n      productname: \"\",\n      CategoryType: \"\",\n      ArrCategoryInfo: [],\n      selectedCategory: \"\",\n      CategoryID: \"\",\n      offSet: 0,\n      ProductID: \"\",\n      LastModifiedUtcDtTmOfReceivedProductData: \"\",\n      formViewMode: \"\",\n      selectedRowIndex: null,\n      page: 0,\n      selectedProductInfo: {},\n      errors: {\n        productname: \"\",\n        CategoryType: \"\",\n        others: \"\"\n      },\n      data: [],\n      columns: [{\n        Header: () => React.createElement(\"div\", {\n          className: \"ProductTableHeader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"Selected\"),\n        accessor: \"\",\n        show: false,\n        Cell: rowInfo => {\n          return React.createElement(\"input\", {\n            type: \"radio\",\n            name: \"selectedRowIndicator\",\n            id: \"indicatingSelectedRow\",\n            className: \"selectedRadioBtn\",\n            checked: this.state.selectedRowIndex == rowInfo.index ? true : false,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          });\n        },\n        Filter: ({\n          filter,\n          onChange\n        }) => {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            style: {\n              display: \"none\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }));\n        },\n        style: {\n          textAlign: \"center\",\n          paddingLeft: \"1rem\"\n        }\n      }, {\n        Header: () => React.createElement(\"div\", {\n          className: \"ProductTableHeader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"Delete\"),\n        accessor: \"delete\",\n        style: {\n          textAlign: \"center\",\n          verticalAlign: \"middle\",\n          paddingLeft: \"1rem\"\n        },\n        getProps: (state, rowInfo, column) => {\n          return {\n            onClick: () => this.onDeleteProductDetails(rowInfo, column),\n            style: {\n              color: \"black\"\n            }\n          };\n        },\n        Filter: () => {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            style: {\n              display: \"none\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }));\n        },\n        Cell: props => React.createElement(\"span\", {\n          className: \"deviceNameCell\",\n          delete: props.original.delete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, props.value)\n      }, {\n        Header: () => React.createElement(\"div\", {\n          className: \"ProductTableHeader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, \"Edit\"),\n        accessor: \"edit\",\n        style: {\n          textAlign: \"center\",\n          verticalAlign: \"middle\",\n          paddingLeft: \"1rem\"\n        },\n        getProps: (state, rowInfo, column) => {\n          return {\n            onClick: () => this.oneditProductDetails(rowInfo, column),\n            style: {\n              color: \"black\"\n            }\n          };\n        },\n        Filter: () => {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            style: {\n              display: \"none\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }));\n        },\n        Cell: props => React.createElement(\"span\", {\n          className: \"deviceNameCell\",\n          edit: props.original.edit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, props.value)\n      }, {\n        Header: () => React.createElement(\"div\", {\n          className: \"ProductTableHeader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, \"Product ID\"),\n        accessor: 'ProductID',\n        Filter: this.createProductDataFilter,\n        style: {\n          textAlign: \"left\",\n          paddingLeft: \"1rem\"\n        }\n      }, {\n        Header: () => React.createElement(\"div\", {\n          className: \"ProductTableHeader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, \"Product Name\"),\n        accessor: 'productname',\n        Filter: this.createProductDataFilter,\n        style: {\n          textAlign: \"left\",\n          paddingLeft: \"1rem\"\n        }\n      }, {\n        Header: () => React.createElement(\"div\", {\n          className: \"ProductTableHeader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, \"Category Name\"),\n        accessor: 'CategoryType',\n        Filter: this.createProductDataFilter,\n        style: {\n          textAlign: \"left\",\n          paddingLeft: \"1rem\"\n        }\n      }, {\n        Header: () => React.createElement(\"div\", {\n          className: \"ProductTableHeader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, \"Category ID\"),\n        accessor: 'CategoryID',\n        Filter: this.createProductDataFilter,\n        style: {\n          textAlign: \"left\",\n          paddingLeft: \"1rem\"\n        }\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.getLatestProductInfo();\n    this.getAllCategoriesInformation();\n  }\n\n  render() {\n    const errors = this.state.errors;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        position: \"relative\",\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ProductTableHeading\",\n      style: {\n        display: \"flex\",\n        marginRight: \"0.3rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }, \"View All Product Details\"), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        position: \"absolute\",\n        right: \"0rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn-md productScreenBut\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    }, \"Add New Product\"))), React.createElement(\"div\", {\n      style: {\n        borderStyle: \"solid\",\n        borderWidth: \"1px\",\n        margin: \"1rem\",\n        border: \"1px solid #a8cca8\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535\n      },\n      __self: this\n    }, React.createElement(ReactTable, {\n      data: this.state.data,\n      columns: this.state.columns,\n      defaultPageSize: 5,\n      filterable: true,\n      className: \"-striped -highlight\",\n      style: {\n        height: '70vh',\n        overflow: 'auto'\n      },\n      noDataText: \"No Product Data Found.\",\n      previousText: \"Previous\",\n      nextText: \"Next\",\n      getTrProps: this.getSelectedTrProps,\n      onPageChange: this.onPageChange,\n      showPagination: false,\n      page: this.state.page,\n      totalPage: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"productScreenBut\",\n      name: \"Hello\",\n      onClick: this.onclickNextPageData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    }, \"Next Page Data\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      size: \"lg\",\n      isOpen: this.state.modal,\n      backdrop: this.state.backdrop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559\n      },\n      __self: this\n    }, this.state.formViewMode == \"editMode\" ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561\n      },\n      __self: this\n    }, \"Edit selected Product Details \") : this.state.formViewMode == \"deleteMode\" ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    }, \"Delete Selected Product Details \") : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }, \"Add New Product Details \")), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container col-lg-11 col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-body addProductBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.insertOrUpdateProductInfo,\n      style: {\n        pointerEvents: this.state.formViewMode == \"viewMode\" ? \"none\" : \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group addProductForm\",\n      style: this.state.formViewMode == \"insertMode\" ? {\n        display: \"none\"\n      } : {\n        display: \"block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"addProductFormLabelWithRequiredFiled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578\n      },\n      __self: this\n    }, \"Product ID:\", React.createElement(\"span\", {\n      className: \"addProductRequiredMarkStar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"div\", {\n      className: \"addProductAndErr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"ProductID\",\n      className: \"AddProductForm\",\n      value: this.state.ProductID,\n      noValidate: true,\n      readOnly: true,\n      style: {\n        color: \"#505050\",\n        backgroundColor: \"#F0F0F0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"form-group addProductForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"addProductFormLabelWithRequiredFiled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591\n      },\n      __self: this\n    }, \"Select Category:\", React.createElement(\"span\", {\n      className: \"addProductRequiredMarkStar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"div\", {\n      className: \"addProductAndErr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594\n      },\n      __self: this\n    }, this.state.formViewMode == \"editMode\" || this.state.formViewMode == \"deleteMode\" ? React.createElement(\"input\", {\n      className: \"AddProductForm\",\n      value: this.state.selectedCategory,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597\n      },\n      __self: this\n    }) : React.createElement(\"select\", {\n      className: \"AddProductForm\",\n      style: {\n        height: \"2.5rem\",\n        marginBottom: \"1rem\"\n      },\n      value: this.state.CategoryID,\n      onChange: this.onSelectCategory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      select: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604\n      },\n      __self: this\n    }, \"Select...\"), this.state.ArrCategoryInfo.map((singleCategoryInfo, index) => React.createElement(\"option\", {\n      key: index,\n      value: singleCategoryInfo['CategoryID'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605\n      },\n      __self: this\n    }, singleCategoryInfo['CategoryType'])))))), React.createElement(\"div\", {\n      className: \"form-group addProductForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"addProductFormLabelWithRequiredFiled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613\n      },\n      __self: this\n    }, \"Product Name:\", React.createElement(\"span\", {\n      className: \"addProductRequiredMarkStar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"div\", {\n      className: \"addProductAndErr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"productname\",\n      className: \"AddProductForm\",\n      value: this.state.productname,\n      onChange: this.onChangeProductName,\n      readOnly: this.state.formViewMode == \"deleteMode\" ? true : false,\n      style: this.state.formViewMode == \"deleteMode\" ? {\n        color: \"#505050\",\n        backgroundColor: \"#F0F0F0\"\n      } : {\n        color: \"\",\n        backgroundColor: \"\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-evenly\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"productScreenBut\",\n      onClick: this.closeModal,\n      name: \"Back\",\n      style: {\n        pointerEvents: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630\n      },\n      __self: this\n    }, \"Back\")), React.createElement(\"div\", {\n      style: {\n        display: \"\".concat(this.state.formViewMode == \"viewMode\" ? \"none\" : \"block\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"productScreenBut\",\n      name: \"Save\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637\n      },\n      __self: this\n    }, this.state.formViewMode == \"deleteMode\" ? \"Delete\" : \"Save\"))), React.createElement(\"div\", {\n      className: \"buttonErrorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642\n      },\n      __self: this\n    }, errors.others.length > 0 && React.createElement(\"p\", {\n      className: \"addProductErr\",\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644\n      },\n      __self: this\n    }, errors.others)))))))))));\n  }\n\n}\nexport default CreateNewProductAndTrackProductInfo;","map":{"version":3,"sources":["/Users/sayalim/Documents/ProjectsOfSayli/HHM/DemoProject/DemoApp/democlient/src/Component/JS/CreateNewProductAndTrackProductInfo.js"],"names":["React","Component","axios","ReactTable","getAPIHostURL","FaSearch","FaEdit","FaTrash","Modal","ModalHeader","ModalBody","CreateNewProductAndTrackProductInfo","constructor","props","oneditProductDetails","rowInfo","column","modifiedState","state","formViewMode","productname","original","selectedCategory","CategoryType","ProductID","CategoryID","console","log","modal","setState","onDeleteProductDetails","createProductDataFilter","filter","onChange","appRelevantDataContextValue","context","t","marginRight","color","event","target","value","width","toggle","prevState","closeModal","getAllCategoriesInformation","post","then","response","data","code","retrievedAllCategoriesInfo","length","errors","others","ArrCategoryInfo","receivedCategoryInfo","j","push","catch","error","getLatestProductInfo","inModifiedState","LastModifiedUtcDtTmForInsertOrUpdateProductDetails","LastModifiedUtcDtTmOfReceivedProductData","jsonBody","retriveRowsLimit","offSet","retrivedProductDetails","stateProductDetailsArr","receivedProductDataArr","editIcon","deleteIcon","i","ProductDetails","singleProductDetails","delete","edit","ProductName","splice","unshift","selectedRowIndex","page","insertOrUpdateProductInfo","preventDefault","productId","productName","categoryId","alert","getSelectedTrProps","instance","undefined","onClick","e","handleOriginal","selectedProductInfo","index","style","cursor","background","alignItems","handleKeyPress","characterCode","key","characterNumber","Number","currentTarget","onPageChange","onChangeProductName","onSelectCategory","onclickNextPageData","backdrop","columns","Header","accessor","show","Cell","Filter","display","textAlign","paddingLeft","verticalAlign","getProps","componentDidMount","render","position","justifyContent","right","borderStyle","borderWidth","margin","border","height","overflow","pointerEvents","backgroundColor","marginBottom","map","singleCategoryInfo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactTable from 'react-table';\nimport { getAPIHostURL } from '../../ClientConfig';\nimport { FaSearch, FaEdit, FaTrash} from 'react-icons/fa';\nimport { Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport 'react-table/react-table.css';\nimport '../CSS/ProductPage.css';\n\n\nexport class CreateNewProductAndTrackProductInfo extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            modal: false,\n            backdrop: 'static',\n            productname: \"\",\n            CategoryType: \"\",\n            ArrCategoryInfo: [],\n            selectedCategory: \"\",\n            CategoryID: \"\",\n            offSet: 0,\n            ProductID: \"\",\n            LastModifiedUtcDtTmOfReceivedProductData: \"\",\n            formViewMode: \"\",\n            selectedRowIndex: null,\n            page: 0,\n\n            selectedProductInfo: {},\n            \n            errors: { \n                productname: \"\",\n                CategoryType: \"\",\n                others: \"\",\n            },\n            data: [],\n\n            columns: [\n                {       \n                    Header:() => <div className=\"ProductTableHeader\">Selected</div>,  \n                    accessor: \"\",\n                    show: false,\n                    Cell: ( rowInfo ) => {\n                        return (\n                            <input\n                                type = \"radio\"\n                                name = \"selectedRowIndicator\"\n                                id = \"indicatingSelectedRow\"\n                                className = \"selectedRadioBtn\"\n                                checked={this.state.selectedRowIndex == rowInfo.index ? true : false }\n                            />\n                        );\n                    },\n                    Filter:({filter, onChange}) => {\n                        return(\n                            <div>\n                                <input style={{ display:\"none\"}} />\n                            </div>\n                        )\n                    },\n                    style:({\n                        textAlign: \"center\",\n                        paddingLeft: \"1rem\"\n        \n                    }),\n                },\n                {   \n                    Header:() => <div className=\"ProductTableHeader\">Delete</div>, \n                    accessor: \"delete\",\n                    style:({\n                        textAlign: \"center\",\n                        verticalAlign: \"middle\",\n                        paddingLeft: \"1rem\"\n        \n                    }),\n                    getProps: (state, rowInfo, column) => {\n                        return {\n                            onClick: () => this.onDeleteProductDetails(rowInfo, column),\n                            style: {\n                                color: \"black\",\n                            },\n                        };\n                    },\n                    Filter:() => {\n                        return(\n                            <div>\n                                <input style={{ display:\"none\"}} />\n                            </div>\n                        )\n                    },\n                    Cell:  props => <span className='deviceNameCell' delete={props.original.delete}>{props.value}</span>\n                },\n                {   \n                    Header:() => <div className=\"ProductTableHeader\">Edit</div>, \n                    accessor: \"edit\",\n                    style:({\n                        textAlign: \"center\",\n                        verticalAlign: \"middle\",\n                        paddingLeft: \"1rem\"\n        \n                    }),\n                    getProps: (state, rowInfo, column) => {\n                        return {\n                            onClick: () => this.oneditProductDetails(rowInfo, column),\n                            style: {\n                                color: \"black\",\n                            },\n                        };\n                    },\n                    Filter:() => {\n                        return(\n                            <div>\n                                <input style={{ display:\"none\"}} />\n                            </div>\n                        )\n                    },\n                    Cell:  props => <span className='deviceNameCell' edit={props.original.edit}>{props.value}</span>\n                },\n                \n                {       \n                    Header:() => <div className=\"ProductTableHeader\">Product ID</div>,  \n                    accessor: 'ProductID',\n                    Filter: this.createProductDataFilter,\n                    style:({\n                        textAlign: \"left\",\n                        paddingLeft: \"1rem\"\n        \n                    }),\n                },\n                {       \n                    Header:() => <div className=\"ProductTableHeader\">Product Name</div>,  \n                    accessor: 'productname',\n                    Filter: this.createProductDataFilter,\n                    style:({\n                        textAlign: \"left\",\n                        paddingLeft: \"1rem\",\n                    }),\n                },\n                {       \n                    Header:() => <div className=\"ProductTableHeader\">Category Name</div>,  \n                    accessor: 'CategoryType',\n                    Filter: this.createProductDataFilter,\n                    style:({\n                        textAlign:\"left\",\n                        paddingLeft: \"1rem\",\n\n                    }),\n                },\n                {       \n                    Header:() => <div className=\"ProductTableHeader\">Category ID</div>,  \n                    accessor: 'CategoryID',\n                    Filter: this.createProductDataFilter,\n                    style:({\n                        textAlign:\"left\",\n                        paddingLeft: \"1rem\"\n                    }),\n                },                        \n            ],     \n        }\n    }\n\n    oneditProductDetails = (rowInfo, column) => {\n        let modifiedState = this.state;\n        modifiedState.formViewMode = \"editMode\";\n\n        modifiedState.productname = rowInfo.original.productname;\n        modifiedState.selectedCategory = rowInfo.original.CategoryType;\n        modifiedState.ProductID = rowInfo.original.ProductID;\n        modifiedState.CategoryID = rowInfo.original.CategoryID\n        console.log(rowInfo.original);\n\n        modifiedState.modal = true;\n        this.setState(modifiedState);\n    }\n\n    onDeleteProductDetails = (rowInfo, column) => {\n\n        let modifiedState = this.state;\n        modifiedState.formViewMode = \"deleteMode\";\n\n        modifiedState.productname = rowInfo.original.productname;\n        modifiedState.selectedCategory = rowInfo.original.CategoryType;\n        modifiedState.ProductID = rowInfo.original.ProductID;\n        modifiedState.CategoryID = rowInfo.original.CategoryID\n        console.log(rowInfo.original);\n\n        modifiedState.modal = true;\n        this.setState(modifiedState);\n\n    }\n\n    createProductDataFilter = ({filter, onChange}) => {\n        let appRelevantDataContextValue = this.context;\n        let t = appRelevantDataContextValue.t;\n        return(\n            <div>\n                <FaSearch style={{marginRight:\"0.3rem\",color:\"var(--secondaryColor)\"}}/>\n                <input\n                    onChange={event => onChange(event.target.value)}\n                    value={filter ? filter.value : ''}\n                    placeholder=\"Search\"\n                    style={{width: \"85%\"}}\n                />\n            </div>\n        );\n    }\n\n    //putting the flag formViewMode to Insert Mode(Create new Product)\n    //toggling the product create form. \n    toggle = () => {\n        this.setState(prevState => {\n            let modifiedState = prevState;\n            modifiedState.modal = !modifiedState.modal\n            modifiedState.ProductID = \"\";\n            modifiedState.productname = \"\";\n            modifiedState.CategoryType = \"\";\n            modifiedState.formViewMode = \"insertMode\";\n            modifiedState.CategoryID = \"\";\n\n            return modifiedState\n        });\n    }\n\n    closeModal = () => {\n        this.toggle();\n    }\n\n    componentDidMount () {\n        \n        this.getLatestProductInfo();\n        this.getAllCategoriesInformation();\n    }\n\n    getAllCategoriesInformation = () => {\n\n        let modifiedState = this.state;\n\n        axios.post(`${getAPIHostURL()}/wclient/getAllCategoriesInformation`)\n        .then(response => {\n            if(response.data.code == 'SUCCESS') {    \n                if(response.data.retrievedAllCategoriesInfo == null || response.data.retrievedAllCategoriesInfo.length <= 0 ){\n                    modifiedState.errors.others = \"Categories Information does not found on server\";\n                    this.setState(modifiedState);\n                    return\n\n                } else {\n                    modifiedState.ArrCategoryInfo = [];\n                    const receivedCategoryInfo = response.data.retrievedAllCategoriesInfo;\n                    for(let j = 0; j < receivedCategoryInfo.length; j++){\n                        modifiedState.ArrCategoryInfo.push(receivedCategoryInfo[j]);\n                    }\n\n                } \n                this.setState(modifiedState);\n            } else {\n                if(response.data.code == 'SQL_ERROR') {\n                    // Tell the user that Server is experiencing errors\n                    modifiedState.errors.others = 'Server experiencing issues.\\nTry again later.';\n                } else {\n                    console.log('Should not reach here');\n                    modifiedState.errors.others = 'Server experiencing issues.\\nTry again later.';\n                }\n            }\n            this.setState(modifiedState);\n        })\n        .catch(error => {\n            console.log(error);\n            console.log(\"Network error:\");\n            modifiedState.errors.others = 'Network issues.\\nCheck your Internet and Try again later.';\n            this.setState(modifiedState);\n        })\n    }\n\n    getLatestProductInfo = (inModifiedState = null) => {\n        \n        let modifiedState;\n        if(inModifiedState == null) {\n            modifiedState = this.state;\n        } else {\n            modifiedState = inModifiedState;\n        }\n\n        let LastModifiedUtcDtTmForInsertOrUpdateProductDetails;\n\n        if(modifiedState.formViewMode == \"editMode\" || modifiedState.formViewMode == \"insertMode\"){\n            LastModifiedUtcDtTmForInsertOrUpdateProductDetails = modifiedState.LastModifiedUtcDtTmOfReceivedProductData;\n        } else {\n            LastModifiedUtcDtTmForInsertOrUpdateProductDetails = null;\n        }\n\n        const jsonBody = {\n            retriveRowsLimit: 5, \n            offSet: modifiedState.offSet\n        };\n        axios.post(`${getAPIHostURL()}/wclient/getProductDetails`, jsonBody)\n        .then(response => {\n            \n            if(response.data.code == 'SUCCESS') {   \n                \n                if(response.data.retrivedProductDetails == null || response.data.retrivedProductDetails.length <= 0){\n                    console.log(\"No Product Data Found on server.\")\n                    this.setState(modifiedState);\n                    return\n                } else {\n                    let stateProductDetailsArr = [];\n                    console.log(\"modifiedState.formViewMode\", modifiedState.formViewMode);\n\n                    // React table checks using referential integrity. So if you do not create a\n                    // new array (but just add to the existing array), the change detection will not trigger.\n                    // So create a brand new array from existing product Details data.\n                    stateProductDetailsArr = [...modifiedState.data]\n\n                    const receivedProductDataArr = response.data.retrivedProductDetails;\n                    let editIcon = <FaEdit className=\"viewAndEditIcon\" title=\"Edit\"/>\n                    let deleteIcon = <FaTrash className=\"viewAndEditIcon\" title=\"Delete\"/>\n\n                    for(let i = 0; i < receivedProductDataArr.length; i++) {\n                        const ProductDetails = receivedProductDataArr[i];\n                        let singleProductDetails = {\n                            delete: deleteIcon,\n                            edit: editIcon,\n                            ProductID: ProductDetails.ProductID,\n                            productname: ProductDetails.ProductName,\n                            CategoryType: ProductDetails.CategoryType,\n                            CategoryID: ProductDetails.CategoryID,\n                        };\n\n                        console.log(\"singleProductDetails\", singleProductDetails);\n\n                        //if form is open in insertMode(create new Product) then just add new retrieved data(new added Product details) at top of the Product table.\n                        if(modifiedState.formViewMode == \"insertMode\"){\n                            for(let j = 0; j < stateProductDetailsArr.length; j++){\n                                if(stateProductDetailsArr[j].ProductID == singleProductDetails.ProductID){\n                                    stateProductDetailsArr.splice(j, 1);\n                                }\n                            }\n                            stateProductDetailsArr.unshift(singleProductDetails);\n                            modifiedState.selectedRowIndex = 0;\n                            modifiedState.page = 0;\n                        }\n                        //if form is open in editMode(edit existing Produc details) then compare all ProductID in Product table\n                        //with retrieved ProductID after editing Product details. If both ProductID get match then remove the selected Product data\n                        //from Product table, and add new retrived Product data at top of the Product table.\n                        else if(modifiedState.formViewMode == \"editMode\"){\n                            for(let j = 0; j < stateProductDetailsArr.length; j++){\n                                if(stateProductDetailsArr[j].ProductID == singleProductDetails.ProductID){\n                                    stateProductDetailsArr.splice(j, 1);\n                                }\n                            }\n                            modifiedState.selectedRowIndex = 0;\n                            modifiedState.page = 0;\n                            stateProductDetailsArr.unshift(singleProductDetails);\n                        }  \n                        //on first time page load its will retrieved 1st 5 product details and add it in product table,\n                        // in order of latest data on top of the product table.\n                        else { \n                            stateProductDetailsArr.push(singleProductDetails);\n                        }\n                    } \n                    modifiedState.data = stateProductDetailsArr;\n                }\n            } else {\n                if(response.data.code == 'SQL_ERROR') {\n                    // Tell the user that Server is experiencing errors\n                    modifiedState.errors.others = 'Server experiencing issues.\\nTry again later.';\n                } else {\n                    console.log('Should not reach here');\n                    modifiedState.errors.others = 'Server experiencing issues.\\nTry again later.';\n                }\n            }\n            this.setState(modifiedState);\n        })\n        .catch(error => {\n            console.log(error);\n            console.log(\"Network error:\");\n            modifiedState.errors.others = 'Network issues.\\nCheck your Internet and Try again later.';\n            this.setState(modifiedState);\n        })\n    }\n\n    insertOrUpdateProductInfo = (event) => {\n        \n        let modifiedState = this.state;\n\n        event.preventDefault();\n\n            const jsonBody = {\n                productId: modifiedState.ProductID,\n                productName: modifiedState.productname, \n                categoryId: modifiedState.CategoryID, \n                formViewMode: modifiedState.formViewMode\n            };\n            console.log(\"jsonBody\", jsonBody);\n\n            axios.post(`${getAPIHostURL()}/wclient/insertOrUpdateProductInfo`, jsonBody)\n            .then(response => {\n                if(response.data.code == 'SUCCESS') {    \n                    if(modifiedState.formViewMode == \"editMode\") {\n                        alert(`Successfully Updated Product Details.`);\n                        modifiedState.modal = false;\n                        this.getLatestProductInfo(modifiedState)\n                    } else if(modifiedState.formViewMode == \"deleteMode\") {\n                        alert(`Successfully Deleted selected Product Details.`);\n\n                        for(let i=0; i< modifiedState.data.length; i++) {\n                            if(modifiedState.data[i]['ProductID'] == modifiedState.ProductID){\n                                modifiedState.data.splice(i,1)\n                            }\n                        }\n                        modifiedState.modal = false;\n                        modifiedState.data = [...modifiedState.data];\n                        this.setState(modifiedState);\n                    } else {\n                        alert(`Successfully Created New Product.`);\n                        modifiedState.modal = false;\n                        this.getLatestProductInfo(modifiedState)\n                    }\n\n                    \n                } else {\n                     if(response.data.code == 'SQL_ERROR') {\n                        // Tell the user that Server is experiencing errors\n                        modifiedState.errors.others = 'Server experiencing issues.\\nTry again later.';\n                    } else if(response.data.code == 'PRODUCT_ALREADY_EXIST'){\n                        modifiedState.errors.others = \"This Product already exists On the Server.\";\n\n                    } else if(response.data.code == 'REQ_PARAMS_MISSING'){\n                        modifiedState.errors.others = \"Server experiencing issues (required parameters not sent). Try again later.\";\n                    } else {\n                        console.log('Should not reach here');\n                        modifiedState.errors.others = 'Server experiencing issues.\\nTry again later.';\n                    }\n                }\n                this.setState(modifiedState);\n            })\n            .catch(error => {\n                console.log(error);\n                console.log(\"Network error:\");\n                modifiedState.errors.others = 'Network issues.\\nCheck your Internet and Try again later.';\n                this.setState(modifiedState);\n            }); \n    }\n\n    getSelectedTrProps = (state, rowInfo, column, instance) => {\n        let modifiedState = this.state\n        if (rowInfo != undefined) {\n            return {\n                onClick: (e, handleOriginal) => {\n\n                    modifiedState.selectedProductInfo = {};\n                    modifiedState.selectedProductInfo = rowInfo.original;\n                    modifiedState.selectedRowIndex = rowInfo.index;\n                  this.setState(modifiedState)\n                },\n                style: {\n                    cursor: '',\n                    background: rowInfo.index == this.state.selectedRowIndex ? '#6c95ba' : '',\n                    color: rowInfo.index == this.state.selectedRowIndex ? 'white' : 'black',\n                    alignItems: \"center\"\n                }\n            }\n        } else {\n            return {}\n        }\n    }\n\n    handleKeyPress = (e) => {\n        const characterCode = e.key\n        const characterNumber = Number(characterCode)\n        if (characterNumber >= 0 && characterNumber <= 9) {\n\n            if (e.currentTarget.value && e.currentTarget.value.length) {\n                return;\n            } \n            else if (characterNumber == 0) {\n                e.preventDefault()\n            }\n        } \n        else {\n            e.preventDefault()\n        }\n    }        \n\n    onPageChange = (page) => {\n        let modifiedState = this.state;\n        modifiedState.page = page;\n    }\n\n    onChangeProductName = (e) => {\n        let modifiedState = this.state;\n        modifiedState.productname = e.target.value;\n        this.setState(modifiedState);\n    }\n\n    onSelectCategory = (e) => {\n        let modifiedState = this.state;\n        console.log(\"ArrCategoryInfo\", modifiedState.ArrCategoryInfo);\n        modifiedState.CategoryID = e.target.value;\n        console.log(modifiedState.CategoryID);\n        this.setState(modifiedState)\n\n    }\n\n    onclickNextPageData = (e) => {\n        let modifiedState = this.state;\n        modifiedState.page = modifiedState.page + 1\n        modifiedState.offSet = modifiedState.page * 5\n\n        console.log( modifiedState.offSet, \"offSet\");\n        console.log( modifiedState.page, \"page\");\n\n        this.getLatestProductInfo();\n\n    }\n\n    render() {\n\n        const {errors} = this.state;\n\n        return (\n            <div>\n                <div style = {{position: \"relative\", display: \"flex\", justifyContent: \"center\"}}>\n                    <div className = \"ProductTableHeading\"  style={{display: \"flex\", marginRight: \"0.3rem\"}}>\n                        View All Product Details\n                    </div> \n                        <div style={{display: \"flex\", position: \"absolute\", right: \"0rem\"}}>\n                            <button type = \"button\" \n                                className = \"btn-md productScreenBut\" \n                                onClick = {this.toggle}>Add New Product\n                            </button>  \n                        </div>\n                </div>\n\n                <div style={{borderStyle: \"solid\", borderWidth: \"1px\", margin:\"1rem\", border: \"1px solid #a8cca8\"}}>\n                    <ReactTable\n                        data = {this.state.data}\n                        columns = {this.state.columns}\n                        defaultPageSize = {5}\n                        filterable\n                        className = \"-striped -highlight\" \n                        style = {{height:'70vh', overflow:'auto'}}  \n                        noDataText = \"No Product Data Found.\"  \n                        previousText = \"Previous\"\n                        nextText = \"Next\"\n                        getTrProps = {this.getSelectedTrProps}\n                        onPageChange = {this.onPageChange}\n                        showPagination={false}\n                        page={this.state.page}\n                        totalPage={10}\n                    />\n                </div>\n                <div>\n                    <button type=\"button\"  className=\"productScreenBut\" name=\"Hello\" onClick={this.onclickNextPageData}>Next Page Data</button>\n                </div>\n\n                <div>\n                    <Modal size=\"lg\" isOpen={this.state.modal} backdrop={this.state.backdrop}>\n                        <ModalHeader toggle={this.toggle} style={{textAlign: \"center\"}}>\n                            {this.state.formViewMode == \"editMode\" \n                            ? <span>Edit selected Product Details </span> \n                            : this.state.formViewMode == \"deleteMode\" \n                            ? <span>Delete Selected Product Details </span> \n                            : <span>Add New Product Details </span>}\n                        </ModalHeader>\n                        <ModalBody>  \n                            <div className=\"container-fluid\">\n                                <div className=\"row justify-content-center\">\n                                    <div className=\"container col-lg-11 col-md-12\">\n                                        <div className=\"modal-body addProductBox\">\n                                            <form onSubmit={this.insertOrUpdateProductInfo} \n                                                style={{pointerEvents: this.state.formViewMode == \"viewMode\" ? \"none\" : \"auto\"}} \n                                            >\n                                                <div className=\"form-group addProductForm\" \n                                                    style={this.state.formViewMode == \"insertMode\" ? {display: \"none\"} : {display: \"block\"}}\n                                                >\n                                                    <div className=\"input-group\">\n                                                        <label className=\"addProductFormLabelWithRequiredFiled\">Product ID:\n                                                            <span className=\"addProductRequiredMarkStar\">*</span>\n                                                        </label>\n                                                        <div className=\"addProductAndErr\">\n                                                            <input type='text' name='ProductID' className=\"AddProductForm\"  \n                                                                value={this.state.ProductID} noValidate  readOnly = {true}\n                                                                style={{color: \"#505050\", backgroundColor: \"#F0F0F0\"}}\n                                                            />  \n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"form-group addProductForm\">\n                                                    <div className=\"input-group\">\n                                                        <label className=\"addProductFormLabelWithRequiredFiled\">Select Category:\n                                                            <span className=\"addProductRequiredMarkStar\">*</span>\n                                                        </label>\n                                                        <div className=\"addProductAndErr\">\n                                                        {this.state.formViewMode == \"editMode\" || this.state.formViewMode == \"deleteMode\"\n                                                        ? \n                                                        <input className=\"AddProductForm\"  value={this.state.selectedCategory} disabled/>\n                                                        : \n                                                        <select className=\"AddProductForm\" \n                                                                style={{height:\"2.5rem\", marginBottom: \"1rem\"}}\n                                                                value={this.state.CategoryID}\n                                                                onChange={this.onSelectCategory}\n                                                        >\n                                                            <option value=\"\" disabled select=\"true\">Select...</option>\n                                                            {(this.state.ArrCategoryInfo).map((singleCategoryInfo,index) => <option key={index} value={singleCategoryInfo['CategoryID']}>{singleCategoryInfo['CategoryType']}</option>)}\n                                                        </select>\n                                                        }\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"form-group addProductForm\">\n                                                    <div className=\"input-group\">\n                                                        <label className=\"addProductFormLabelWithRequiredFiled\">Product Name:\n                                                            <span className=\"addProductRequiredMarkStar\">*</span>\n                                                        </label>\n                                                        <div className=\"addProductAndErr\">\n                                                            <input type='text' name='productname' className=\"AddProductForm\"  \n                                                                value={this.state.productname}\n                                                                onChange={this.onChangeProductName}  \n                                                                readOnly = {this.state.formViewMode == \"deleteMode\" ? true : false}\n                                                                style={this.state.formViewMode == \"deleteMode\" ? {color: \"#505050\", backgroundColor: \"#F0F0F0\", } \n                                                                        : {color: \"\", backgroundColor: \"\", }}\n                                                            />\n                                                        </div>        \n                                                    </div>\n                                                </div>\n\n                                                <div style={{display: \"flex\", justifyContent: \"space-evenly\"}}>\n                                                    <div>\n                                                        <button type=\"button\" className=\"productScreenBut\" \n                                                            onClick={this.closeModal} name=\"Back\" \n                                                            style={{pointerEvents: \"auto\"}}\n                                                        > \n                                                        Back</button>\n                                                    </div >\n                                                    <div style={{ display: `${this.state.formViewMode == \"viewMode\" ? \"none\" : \"block\"}` }}>\n                                                        <button type=\"submit\" className=\"productScreenBut\"  name=\"Save\">\n                                                            {this.state.formViewMode == \"deleteMode\" ? \"Delete\" : \"Save\"}\n                                                        </button>\n                                                    </div>\n                                                </div>\n                                                <div className = \"buttonErrorMessage\">\n                                                    {errors.others.length > 0 && \n                                                        <p  className='addProductErr' style={{textAlign: \"center\"}}>{errors.others}</p>}\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </ModalBody>\n                    </Modal>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CreateNewProductAndTrackProductInfo;"]},"metadata":{},"sourceType":"module"}